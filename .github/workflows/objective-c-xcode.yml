name: Xcode - Build, Analyze and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build, analyse and test default scheme using xcodebuild command
    runs-on: macos-14
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set Default Scheme
        working-directory: VultisigApp
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app
          mdfind "kMDItemCFBundleIdentifier = 'com.apple.dt.Xcode'"
          xcrun --find xcodebuild
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          
      - name: Build and Test
        working-directory: VultisigApp
        env:
          scheme: ${{ 'default' }}
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          
          # Print environment info
          echo "Xcode version:"
          xcodebuild -version
          echo "Swift version:"
          swift --version
          
          # Clean, build, analyze and test in one command
          echo "Building, analyzing and testing for scheme: $scheme"
          xcodebuild clean build analyze test \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.2' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_ALLOWED=NO \
            ONLY_ACTIVE_ARCH=NO \
            DEBUG_INFORMATION_FORMAT=dwarf \
            SWIFT_COMPILATION_MODE=wholemodule \
            -verbose \
            OTHER_SWIFT_FLAGS="-Xfrontend -debug-time-function-bodies" \
            | xcpretty -c && exit ${PIPESTATUS[0]}
